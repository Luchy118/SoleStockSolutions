@model SoleStockSolutions.Models.Marcas
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Marcas</h1>
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="read-tab" data-toggle="tab" href="#read" role="tab" aria-controls="read" aria-selected="true">Consultar</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="create-tab" data-toggle="tab" href="#create" role="tab" aria-controls="create" aria-selected="false">Añadir Nuevo</a>
        </li>
    </ul>
    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="read" role="tabpanel" aria-labelledby="read-tab">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Lista de Marcas</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>ID Marca</th>
                                    <th>Nombre Marca</th>
                                    <th>Logo</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>ID Marca</th>
                                    <th>Nombre Marca</th>
                                    <th>Logo</th>
                                    <th>Acciones</th>
                                </tr>
                            </tfoot>
                            <tbody>
                                @foreach (var marca in ViewBag.Marcas as List<SoleStockSolutions.Models.Marcas>)
                                {
                                    <tr>
                                        <td>@marca.id_marca</td>
                                        <td>@marca.nombre_marca</td>
                                        <td><img src="@marca.logo_marca" alt="Logo Marca" width="75"></td>
                                        <td>
                                            <a class="btn btn-sm btn-primary" data-toggle="tab" onclick='loadBrandData(@marca.id_marca); $("#read").removeClass("active"); $("#update").addClass("show active");'><i class="fas fa-edit"></i></a>
                                            <a class="btn btn-sm btn-danger" onclick='var data = { id: @marca.id_marca }; popups.showConfirmDelete("Confirmar Eliminación", "¿Está seguro de que desea eliminar esta marca?", "/adminpanel/deletebrand", data )'><i class="fas fa-trash"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade card shadow" id="create" role="tabpanel" aria-labelledby="create-tab">
            <div class="card-body">
                <form id="createBrandForm" enctype="multipart/form-data">
                    <div class="form-group">
                        <label for="createNombreMarca">Nombre Marca</label>
                        @Html.TextBoxFor(m => m.nombre_marca, new { @class = "form-control", id = "createNombreMarca", required = "required", maxlength = "50", onblur = "validateUniqueBrandName(this)" })
                        @Html.ValidationMessageFor(m => m.nombre_marca, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="createLogoMarca">Logo Marca</label>
                        <input type="file" class="form-control-file" id="createLogoMarca" name="logo_marca" accept="image/*" onchange="previewCreateImage(this)" />
                        <img id="createLogoPreview" style="display:none;" src="" alt="Logo Marca" width="75" class="mt-2" />
                    </div>
                    <button type="submit" class="btn btn-primary" disabled>Guardar</button>
                    <button type="button" class="btn btn-warning" onclick="clearCreateForm()" disabled>Limpiar Campos</button>
                    <button type="button" class="btn btn-secondary" onclick="cancelCreateForm()">Cancelar</button>
                </form>
            </div>
        </div>
        <div class="tab-pane fade card shadow" id="update" role="tabpanel">
            <div class="card-body">
                <form id="updateBrandForm" enctype="multipart/form-data">
                    <div class="form-group">
                        <label for="updateIdMarca">ID Marca</label>
                        @Html.TextBoxFor(m => m.id_marca, new { @class = "form-control", id = "updateIdMarca", @readonly = "readonly", disabled = "disabled" })
                    </div>
                    <div class="form-group">
                        <label for="updateNombreMarca">Nombre Marca</label>
                        @Html.TextBoxFor(m => m.nombre_marca, new { @class = "form-control", id = "updateNombreMarca", required = "required", maxlength = "50", onblur = "validateUniqueBrandName(this)", disabled = "disabled" })
                        @Html.ValidationMessageFor(m => m.nombre_marca, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="updateLogoMarca">Logo Marca</label>
                        <input type="file" class="form-control-file" id="updateLogoMarca" name="logo_marca" accept="image/*" disabled="disabled" onchange="previewUpdateImage(this)" />
                        <img id="updateLogoPreview" style="display:none;" src="" alt="Logo Marca" width="75" class="mt-2" />
                    </div>
                    <button type="submit" class="btn btn-primary" disabled="disabled">Modificar Marca</button>
                    <button type="button" id="cancelUpdateBrand" onclick="location.reload()" class="btn btn-secondary">Cancelar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#dataTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.21/i18n/Spanish.json"
                }
            });

            $('#createNombreMarca, #createLogoMarca').on('input change', function () {
                toggleCreateFormButtons();
            });

            $('#createBrandForm').submit(function (e) {
                e.preventDefault();
                if (!isBrandNameUnique('#createNombreMarca'))
                    return;
                var formData = new FormData(this);
                $.ajax({
                    url: '@Url.Action("CreateBrand", "AdminPanel").ToLower()',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.success) {
                            popups.showSuccessTimer("Marca añadida exitosamente.", "Redirigiendo a la lista de marcas...");
                            setTimeout(function() {
                                window.location.href = '@Url.Action("Brands", "AdminPanel").ToLower()';
                            }, 2000);
                        } else {
                            popups.showErrorTimer(data.error);
                        }
                    }
                });
            });

            $('#updateBrandForm').submit(function (e) {
                e.preventDefault();
                if (!isBrandNameUnique('#updateNombreMarca'))
                    return;
                var formData = new FormData(this);
                $.ajax({
                    url: '@Url.Action("UpdateBrand", "AdminPanel").ToLower()',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.success) {
                            popups.showSuccessTimer("Marca modificada exitosamente.", "Redirigiendo a la lista de marcas...");
                            setTimeout(function() {
                                window.location.href = '@Url.Action("Brands", "AdminPanel").ToLower()';
                            }, 2000);
                        } else {
                            popups.showErrorTimer(data.error);
                        }
                    }
                });
            });

            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                if (e.target.id !== 'update-tab') {
                    $('#updateBrandForm input, #updateBrandForm button[type="submit"]').prop('disabled', true);
                }
                if (e.target.id !== 'create-tab') {
                    clearCreateForm();
                }
            });

            $('#updateNombreMarca, #updateLogoMarca').on('input change', function () {
                toggleUpdateFormButtons();
            });

            $('#updateNombreMarca').data('initialValue', $('#updateNombreMarca').val().toLowerCase());
            $('#updateBrandForm input, #updateBrandForm button[type="submit"]').prop('disabled', true);
        });

        function loadBrandData(id) {
            $.ajax({
                url: '@Url.Action("GetBrand", "AdminPanel").ToLower()',
                type: 'POST',
                data: { id: id },
                success: function (data) {
                    enableUpdateForm();
                    $('#updateIdMarca').val(data.id_marca);
                    $('#updateNombreMarca').val(data.nombre_marca).data('initialValue', data.nombre_marca.toLowerCase()).data('isUnique', true);
                    if (data.logo_marca)
                        $('#updateLogoPreview').attr('src', data.logo_marca).show();
                    else
                        $('#updateLogoPreview').hide();
                    toggleUpdateFormButtons();
                }
            });
        }

        function validateUniqueBrandName(input) {
            var nombreMarca = $(input).val().toLowerCase();
            var initialValue = $(input).data('initialValue');

            if (nombreMarca !== initialValue) {
                $.ajax({
                    url: '@Url.Action("IsBrandNameUnique", "AdminPanel").ToLower()',
                    type: 'POST',
                    data: { nombre_marca: nombreMarca },
                    success: function (data) {
                        if (data) {
                            $(input).addClass('is-invalid');
                            $(input).siblings('.text-danger').text('El nombre de la marca ya existe.');
                            $(input).data('isUnique', false);
                        } else {
                            $(input).removeClass('is-invalid');
                            $(input).siblings('.text-danger').text('');
                            $(input).data('isUnique', true);
                        }
                    }
                });
            } else {
                $(input).removeClass('is-invalid');
                $(input).siblings('.text-danger').text('');
                $(input).data('isUnique', true);
            }
        }

        function previewCreateImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#createLogoPreview').attr('src', e.target.result).show();
                    toggleCreateFormButtons();
                }
                reader.readAsDataURL(input.files[0]);
            } else {
                $('#createLogoPreview').attr('src', '').hide();
                toggleCreateFormButtons();
            }
        }

        function previewUpdateImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#updateLogoPreview').attr('src', e.target.result).show();
                    toggleUpdateFormButtons();
                }
                reader.readAsDataURL(input.files[0]);
            } else {
                $('#updateLogoPreview').attr('src', '').hide();
                toggleUpdateFormButtons();
            }
        }

        function clearCreateForm() {
            $('#createBrandForm')[0].reset();
            $('#createLogoPreview').attr('src', '').hide();
            $('#createNombreMarca').removeClass('is-invalid');
            $('#createNombreMarca').siblings('.text-danger').text('');
            toggleCreateFormButtons();
        }

        function cancelCreateForm() {
            clearCreateForm();
            $('#read-tab').tab('show');
            $('button[type="submit"], button.btn-warning', '#createBrandForm').prop('disabled', true);
        }

        function enableUpdateForm() {
            $('#updateBrandForm input, #updateBrandForm button[type="submit"]').prop('disabled', false);
        }

        function isBrandNameUnique(inputSelector) {
            console.log($(inputSelector));
            console.log($(inputSelector).data('isUnique'));
            return $(inputSelector).data('isUnique') === true;
        }

        function toggleCreateFormButtons() {
            var isFormModified = $('#createNombreMarca').val().trim() !== '' || $('#createLogoPreview').attr('src') !== '';
            $('button[type="submit"], button.btn-warning', '#createBrandForm').prop('disabled', !isFormModified);
        }

        function toggleUpdateFormButtons() {
            var isFormModified = $('#updateNombreMarca').val().trim() !== '' || $('#updateLogoPreview').attr('src') !== '';
            $('button[type="submit"], button.btn-warning', '#updateBrandForm').prop('disabled', !isFormModified);
        }
    </script>
}
